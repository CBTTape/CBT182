/* --------------------  rexx procedure  -------------------- *
 | Name:      VI (VSAM Information)                           |
 |                                                            |
 | Function:  The VI exec is used to invoke LISTCAT on a      |
 |            VSAM dataset and display the results in an      |
 |            ISPF panel.                                     |
 |                                                            |
 |            VI can be entered from the DSLIST (3.4) or      |
 |            VS can be entered from the PDS LISTF dialog,    |
 |            both as line commands.                          |
 |                                                            |
 | Author:    Steve Kleeves, Makita USA Inc                   |
 |                                                            |
 | Modified:  John Kalinich, CSC                              |
 |            William (Bill) Smith, US Steel                  |
 |            Jim Turner, Trident Services                    |
 * ---------------------------------------------------------- */
IF SYSVAR(SYSISPF) = 'NOT ACTIVE' THEN DO
   SAY 'ISPF must be active to use the VI dialog.'
   EXIT
END
ARG DSNAME
IF DSNAME = ' ' THEN DO
   SAY 'Please enter a VSAM data set name:'
   PULL DSNAME
END
TDSN = STRIP(DSNAME,,'''')
STATUS=SYSDSN(''''TDSN'''')
IF STATUS /= 'OK' THEN DO
 /* SAY TDSN "NOT FOUND" */
    zedsmsg = 'NOT CATALOGED'
    zedlmsg = 'The specified data set is not catalogued.'
    "ISPEXEC SETMSG MSG(ISRZ001)"
    EXIT
END
X=OUTTRAP('CLS.')
"LISTC EN('"TDSN"') ALL"
listc_rc = rc                                                 /* @JK */
X=OUTTRAP('OFF')
IF listc_rc /= 0 THEN DO                                      /* @JK */
 /* SAY TDSN "IS NOT IN CATALOG" */                           /* @JK */
    zedsmsg = 'ERROR: NOT CATALOGED'                          /* @JK */
    zedlmsg = 'The VSAM data set is not cataloged'            /* @JK */
    "ISPEXEC SETMSG MSG(ISRZ001)"                             /* @JK */
    EXIT                                                      /* @JK */
END                                                           /* @JK */
IF POS('ALIAS',CLS.1) /= 0 THEN DO                            /* @JK */
 /* SAY TDSN "IS NOT A VSAM DATASET" */                       /* @JK */
    zedsmsg = 'ERROR: ALIAS'                                  /* @JK */
    zedlmsg = 'The VI dialog does not process aliases'        /* @JK */
    "ISPEXEC SETMSG MSG(ISRZ001)"                             /* @JK */
    EXIT                                                      /* @JK */
END                                                           /* @JK */
IF POS('PATH',CLS.1) /= 0 THEN DO                             /* @JK */
 /* SAY TDSN "CAN'T HANDLE PATHS" */                          /* @JK */
    zedsmsg = 'ERROR: PATH'                                   /* @JK */
    zedlmsg = 'The VI dialog does not process paths'          /* @JK */
    "ISPEXEC SETMSG MSG(ISRZ001)"                             /* @JK */
    EXIT                                                      /* @JK */
END                                                           /* @JK */
IF POS('NONVSAM',CLS.1) /= 0 THEN DO
 /* SAY TDSN "IS NOT A VSAM DATASET" */
    zedsmsg = 'ERROR: NONVSAM'
    zedlmsg = 'The VI dialog does not process non-VSAM data sets'
    "ISPEXEC SETMSG MSG(ISRZ001)"
    EXIT
END
IF POS('USERCATALOG',CLS.1) /= 0 THEN DO
 /* SAY TDSN "CAN'T HANDLE CATALOGS" */
    zedsmsg  = 'ERROR: CATALOG'
    zedlmsg = 'The VI dialog does not process VSAM catalogs'
    "ISPEXEC SETMSG MSG(ISRZ001)"
    EXIT
END
IF POS('INDEX',CLS.1) /= 0 THEN INDEX = 'Y'
CDATE = SUBSTR(CLS.4,53,8)
EDATE = SUBSTR(CLS.5,53,8)

CATNME = ''
SCLS = ''
MCLS = ''
DCLS = ''
LG   = ''
IUSE = ''
IF POS('IN-CAT',CLS.2) = 6 THEN
   CATNME = STRIP(WORD(CLS.2,3),B,' ')
DO I=6 TO CLS.0
IF POS('STORAGECLASS',CLS.I) = 8 THEN
DO
   WRKLNE = TRANSLATE(CLS.I,'   ','-()')
   SCLS = WORD(WRKLNE,2)
   MCLS = WORD(WRKLNE,4)
   I = I + 1
   WRKLNE = TRANSLATE(CLS.I,'   ','-()')
   DCLS = WORD(WRKLNE,2)
END
IF WORD(CLS.I,1) = 'RLSDATA' THEN
DO
   I = I + 1
   WRKLNE = TRANSLATE(CLS.I,'   ','-()')
   LG = WORD(WRKLNE,2)
   I = I + 1
   WRKLNE = TRANSLATE(CLS.I,'   ','-()')
   IUSE = WORD(WRKLNE,7)
END
IF POS('ATTRIBUTE',CLS.I) = 6 THEN DO
   I = I + 1
   IF POS('NOUPGRADE',CLS.I) = 8 | POS('UPGRADE',CLS.I) =8 THEN DO
       PARSE VAR CLS.I OPTF
       ITERATE
   END
   KLEN = STRIP(SUBSTR(CLS.I,25,8),,'-')
   ALEN = STRIP(SUBSTR(CLS.I,54,7),,'-')
   CISZ = STRIP(SUBSTR(CLS.I,114,5),,'-')
   I = I + 1
   RKP  = STRIP(SUBSTR(CLS.I,25,8),,'-')
   MLEN = STRIP(SUBSTR(CLS.I,54,7),,'-')
   CICA = STRIP(SUBSTR(CLS.I,114,5),,'-')
   I = I + 1
   IF POS('BUFND',CLS.I) /=0 THEN I = I + 1
   IF POS('STRIPE-COUNT',CLS.I) /=0 THEN I = I + 1
   IF POS('RECORDS/CI',CLS.I) /=0 THEN I = I + 1
   IF POS('AXRKP',CLS.I) /=0 THEN I = I + 1
   IF POS('VERSION-NUMBER',CLS.I) /=0 THEN I = I + 1
   IF POS('ACT-DIC-TOKEN',CLS.I) /=0 THEN I = I + 1
   TYPE = 'INDEXED'
   IF POS('NONINDEX',CLS.I) /=0 THEN
      TYPE = 'NONINDEXED'
   IF POS('NUMBERED',CLS.I) /=0 THEN
      TYPE = 'NUMBERED'
   IF POS('LINEAR',CLS.I) /=0 THEN
      TYPE = 'LINEAR'
   IF POS(' IMBED',CLS.I) /=0 & INDEX = 'Y' THEN SEQ = 'Y'
   PARSE VAR CLS.I OPT1 OPT2 OPT3 OPT4 OPT5 OPT6 OPT7 OPT8
   I = I + 1
   IF POS('NONINDEX',CLS.I) /=0 THEN
      TYPE = 'NONINDEXED'
   IF POS('NUMBERED',CLS.I) /=0 THEN
      TYPE = 'NUMBERED'
   IF POS('LINEAR',CLS.I) /=0 THEN
      TYPE = 'LINEAR'
   IF POS(' IMBED',CLS.I) /=0 & INDEX = 'Y' THEN SEQ = 'Y'
   IF POS('STATISTIC',CLS.I) = 6 THEN
      LEAVE
   PARSE VAR CLS.I OPTA OPTB OPTC OPTD OPTE
   IF OPTF /= 'OPTF' THEN OPTE = OPTF

   LEAVE
END
END
DO I=I TO CLS.0
IF POS('STATISTIC',CLS.I) = 6 THEN DO
   I = I + 1
   RTOT = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CISP = STRIP(SUBSTR(CLS.I,54,7),,'-')
   I = I + 1
   RDEL = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CASP = STRIP(SUBSTR(CLS.I,54,7),,'-')
   EXTS = STRIP(SUBSTR(CLS.I,87,3),,'-')
   I = I + 1
   RINT = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CIFR = STRIP(SUBSTR(CLS.I,58,3),,'-')
   I = I + 1
   RUPD = STRIP(SUBSTR(CLS.I,21,11),,'-')
   CAFR = STRIP(SUBSTR(CLS.I,58,3),,'-')
   I = I + 1
   RRET = STRIP(SUBSTR(CLS.I,21,11),,'-')
   LEAVE
END
END
DO I=I TO CLS.0
IF POS('ALLOCATION',CLS.I) = 6 THEN DO
   I = I + 1
   ATYP = 'cylinders:'
   IF SUBSTR(CLS.I,29,3) = 'ACK' THEN
   ATYP = 'tracks:'
   IF SUBSTR(CLS.I,29,3) = 'ORD' THEN
   ATYP = 'records:'
   BTYP = ATYP
   ARBA = STRIP(SUBSTR(CLS.I,50,11),,'-')
   I = I + 1
   SPRI = STRIP(SUBSTR(CLS.I,24,8),,'-')
   URBA = STRIP(SUBSTR(CLS.I,50,11),,'-')
   I = I + 1
   SSEC = STRIP(SUBSTR(CLS.I,24,8),,'-')
   LEAVE
END
END
A = 1
DO I=I TO CLS.0
IF POS('INDEX',CLS.I) = 4 THEN LEAVE
IF POS('VOLSER',CLS.I) = 8 THEN DO
   VSER.A = STRIP(SUBSTR(CLS.I,26,6),,'-')
   IF SEQ = 'Y' & A=1 THEN DO
   ARBA = STRIP(SUBSTR(CLS.I,80,10),,'-')
   EXTS = STRIP(SUBSTR(CLS.I,116,3),,'-')
   END
   A = A +1
IF A = 2 THEN DO
   I = I + 1
   IF SEQ = 'Y' THEN DO
   URBA = STRIP(SUBSTR(CLS.I,80,10),,'-')
   I = I + 1
   TRKS = STRIP(SUBSTR(CLS.I,59,2),,'-')
   LEAVE
   END
   I = I + 1
   TRKS = STRIP(SUBSTR(CLS.I,59,2),,'-')
END
END
END
IF VSER.1 /= 'VSER.1' THEN VOL1 = VSER.1
IF VSER.2 /= 'VSER.2' THEN VOL2 = VSER.2
IF VSER.3 /= 'VSER.3' THEN VOL3 = VSER.3

IF DATATYPE(ARBA) = 'NUM' &,
   DATATYPE(CISZ) = 'NUM' &,
   DATATYPE(CICA) = 'NUM' &,
   DATATYPE(TRKS) = 'NUM'  THEN DO
  ATRK = ARBA/CISZ/CICA*TRKS
  ATRK = FORMAT(ATRK,,0)
  END
IF DATATYPE(URBA) = 'NUM' &,
   DATATYPE(CISZ) = 'NUM' &,
   DATATYPE(CICA) = 'NUM' &,
   DATATYPE(TRKS) = 'NUM'  THEN DO
  UTRK = URBA/CISZ/CICA*TRKS
  UTRK = FORMAT(UTRK,,0)
  END
IF DATATYPE(UTRK) = 'NUM' &,
   DATATYPE(ATRK) = 'NUM'  THEN DO
  UPER = UTRK/ATRK*100
  UPER = FORMAT(UPER,,0)
  END
zedsmsg  = 'VSAM INFO     '
zedlmsg  = 'VSAM INFO is distributed with the PDS TSO command package'
"ISPEXEC SETMSG MSG(ISRZ001)"

do while virc < 8
  "ISPEXEC DISPLAY PANEL(VI#1)"
  virc = rc
  end
