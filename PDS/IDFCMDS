*----------------------------------------------------------------------*
*                           IDF commands                               *
*----------------------------------------------------------------------*
ABEND
    Performs IDF cleanup, then issues OS ABEND.
ADSTOP
    Sets one end of a PER ADSTOP range.
ADSTOPS
    Displays the current Address Stops and Register Alteration Stops.
AFPR
    Displays the Additional Floating-Point Registers and the
    Floating-Point Control Register.
ALARM
    Enables or disables the terminal alarm.
ALET
    Sets the ALET for a dump window.
APROGMSG
    Enables or disables the trapping of asynchronous program-checks
    which occur while IDF displays the user interface.
AREGS
    Rotates the register display between GPRs and ARs.
ARRAY
    Enables variable display in the array format.
AUDIT
    Enables or disables the VAR basing "audit trail".
BACK
    Displays previously dumped storage (the last 10 dumps can be
    displayed).
BASE
    Sets the base of a target.
BINARY
    A synonym of the FIXED command.
BIT
    Sets or queries the VAR display format for BIT variables.
BOTTOM
    Displays source code at the highest available address within the
    current code section.
BREAK
    Sets an instruction breakpoint.
BRIEF
    Disables or enables the display of VAR declaration information.
CALLERS
    Displays information for each generation in the program caller
    hierarchy.
CHARACTER
    Sets or queries display format for CHARACTER variables.
CHECK
    Enables or disables the checking of types of input values.
CLOSE
    Closes a window.
COLORS
    Sets display colors.
COMMAND
    Performs an IDF command.
COMPACT
    Enables or disables the compact variable display mode.
CREGS
    Rotates register display between GPRs and CRs.
CURSOR
    Positions the cursor within a window.
DBREAK
    Sets a deferred instruction breakpoint in a module.
DETAIL
    Controls the display of data for Structure or Union components of
    intermediate depth.
DISASM
    Displays a disassembly listing.
DOWN
    A synonym of the NEXT command.
DROP GLOBAL
    Discards information for stems from storage.
DROP MODULE
    Discards information about module module-name.
DROP SYMBOLS
    Discards IDF symbols.
DUMP
    Provides Storage Dump in the format HEX ... HEX *char*
DUMPMODE
    Toggles the Dump Format between symbolic and unformatted.
EPNAMES
    Toggles the Entry Point Names display.
EPOFFSET
    Specifies the entry-point-offset.
EXITEXEC
    Toggles the Exit Routine.
EXLIMIT
    Sets the maximum LSM stemmed array index during EXTRACT LANGUAGE
    commands execution.
FIND
    An ISPF-style source text search facility, which locates the string
    and displays the section of code where it occurs.
FIRST
    Displays the source code which corresponds to the lowest address.
FIXED
    Sets or queries the VAR display format for FIXED variables.
FLOAT
    Sets or queries the VAR display format for FLOAT variables.
FMT
    A synonym of the FORMAT command.
FOLLOW
    Directs the DUMP window to  follow" the contents of a register.
FORMAT
    Controls the display format for individual variables.
FPC
    Sets the Floating Point Control register.
FPR
    Sets a floating point register.
GLOBALS
    Displays information about the Global Storage stems.
GOTO
    Places an evaluated expression in the address portion of the PSW.
GPACK
    Returns the Global Storage data storage areas which no longer
    contain stem data.
GPR
    Sets a general register.
GPRG
    Sets a 64-bit general register.
GPRH
    Sets the upper 32-bits of a 64-bit general register.
GSTATUS
    Displays information about the storage used to contain the Global
    Storage stem data loaded with SET GLOBAL STEM commands.
HIDE
    Controls the display of source code and disassembly, by hiding
    information. The SHOW command controls the display by showing
    information.
HISTORY
    Reviews instruction history (PATH).
ICOUNT
    Displays the number of instructions executed since the last ICOUNT
    command.
KWDSYN
    Defines a synonym of an IDF keyword.
LANGUAGE +
    Scrolls the LSM window.
LANGUAGE COLOR
    Selects the color used to display source code.
LANGUAGE COMMENTS
    Enables or disables the block comment display.
LANGUAGE DEBUG
    Enables or disables the display of IDF LSM interface debug
    information.
LANGUAGE DECLARES
    Enables or disables the declare display.
LANGUAGE DROP
    Removes one or more language extract files from memory.
LANGUAGE LOAD
    Loads an extract file, optionally associating it with a specific
    MODULE.
LANGUAGE MACROS
    Enables or disables the display of assembler source generated by
    macros.
LANGUAGE OPTIONS
    Displays the current value of ASMLANG settings and the Options save
    stack nesting level.
LANGUAGE SCROLL
    Sets the default scroll amount.
LANGUAGE STATUS
    Displays information about extract files currently loaded.
LANGUAGE STEM
    Alters the name of the REXX stemmed array variable for the EXTRACT
    LANGUAGE commands, and other EXTRACT commands.
LANGUAGE VERSION
    Displays the ASMLANG version identifier.
LANGUAGE XPATH
    Defines the extract file search path file type (z/OS DD name)
    informtion.
LAST
    Displays source code at the highest address.
LASTMSG
    Displays last two messages.
LEFT
    Scrolls a window left.
LIBE
    Nominates the source of the target program which IDF is to load.
LOAD
    Loads a target module and associated symbols.
LOCATE
    XEDIT-style source text search facility which locates the string and
    displays the section of code where it occurs. The search begins at
    first source line on screen.
LOCATION
    Sets the main storage to MEMAREA (MEMAREA is a REXX variable).
LOCATION ALET
    Sets storage in a dataspace to MEMAREA (MEMAREA is a REXX variable).
MACRO
    Issues an IDF macro.
MAJOR
    Disables or enables display of data for Structure or Union major
    component.
MAP
    Displays information about modules.
MAXIMIZE
    Maximizes a window.
MINIMIZE
    Minimizes a window.
MODULE
    Prevents IDF from loading a target module. (Use only in a macro.)
MODULE
    Sets the base and size of a module from system control blocks.
MODULE BASE
    Sets the base of module modname.
MODULE SIZE
    Sets the size of module modname.
MOVE
    Moves a window around on the screen.
MPACK
    Returns unused areas in the extract data storage pool to allow use
    by other programs.
MRUN
    Execute program until next event. (Use only in a macro.)
MSG
    Sets the next message.
MSGID
    Toggles the display of the message identifier.
MSGMODE
    Displays status and informational messages when various IDF commands
    have been issued via PF keys.
MSTATUS
    Displays extract data memory status:
      o number of compile areas
      o extract data storage consumption (total, direct, pooled)
      o extract data storage pool utilization, including number of AREAs
        in the pool which are unused
MSTEP
    Executes the next program instruction. (Use only in a macro.)
NAMES
    If name patterns are specified, displays the symbol names associated
    with those patterns.
NEXT
    Scrolls a window forward.
OFFSET
    Sets or queries the current offset.
OPEN
    Opens a window.
OPTIONS
    Toggles the options window.
ORDER
    Makes a window the first displayed.
OREGS
    Toggles the old registers window.
PACKED
    Selects the default VAR display format for Packed Decimal variables.
PARMS
    Displays the Parameter List for module names.
PAUSE
    Delays the execution of IDF for a number of seconds.
PFK
    Assigns a command to a PF key.
PFKDISP
    Toggles the display of the PF keys settings.
PLOCATES
    Displays Pointer Locates information for variables.
PRESERVE
    Saves LSM Options and Settings in a 32 element stack.
PREVIOUS
    Scrolls a window backward.
PSW
    A synonym of the GOTO command.
QUALIFY
    Sets the currently qualified module.
QUIET
    Disables or enables display of informational messages.
QUIETLY
    Temporarily suppresses the display of I, W, and E messages during
    execution of a command..
QUIT
    Returns to z/OS or TSO.
RCQUIT
    Returns to z/OS or TSO with a return code.
REFRESH
    Refreshes windows.
REGS
    Toggles the Register display.
REGS64
    Toggles the Current Registers and Old Registers windows between
    displaying 31-bit and 64-bit registers.
RESTORE
    Restores LSM Options and Settings from a 32 element stack.
RETRIEVE
    Puts the previous command in the command area.
RIGHT
    Scrolls a window to the right.
RLOG
    Executes commands stored in the command log.
RUN
    Runs the program until the next event.
RUNEXIT
    Executes the current exit routine (PFKey).
R0-R15
    Sets a General Purpose register.
SALIMIT
    Sets the maximum Program Caller hierarchy depth for the CALLERS
    command.
SAREGS
    Enables or disables the display of Save Area header and registers
    for the CALLERS command.
SAVE
    A synonym of the PRESERVE command.
SEARCH
    Searches for a string in storage.
SET AREG
    Sets ARn.
SET BREAK
    Sets or clears a breakpoint at an address.
SET COMMAND
    Places text on the command line.
SET EXITEXEC
    IDF-exit-exec is the current exit.
SET GLOBAL STEM
    Writes data in a REXX stemmed array.
SET GLOBAL TEXT
    Sets the IDF global area to text.
SET ICOUNT
    Sets the instructions counted.
SET OFFSET
    Toggles the display of addresses using offsets.
SET OPTION
    Enables or disables an IDF option.
SET PSW
    Sets the current PSW to a value.
SET SIZE
    Sets the size of the program.
SHOW
    Controls source code and disassembly display, by showing
    information. The HIDE command controls the display by hiding
    information.
SIZE
    Resizes a window.
SKIPSTEP
    Sets a subroutine to be skipped.
SPACE
    Toggles the insertion of a blank line between variables or sets of
    components.
STATUS
    Toggles the program status window.
STEP
    Steps to the next instruction in the program.
STMTSTEP
    Steps to the next statement in the target program.
STOKEY
    Displays the Storage Key.
STOREMAP
    Displays information about storage allocation.
STRUCTURE
    Enables variable display in a structure format.
SWAP
    Displays the application screen.
SYMBOL
    Adds a symbol to the symbol table.
TASKS
    Display information about currently executing tasks
TITLE
    Sets the value of the title text.
TOP
    Displays source code at the lowest address within the current code
    section.
TRIGGER LOAD
    Installs deferred breakpoints in a loaded module.
TYPE
    Displays type attributes for variables.
UNION
    A synonym of the STRUCTURE command.
UNTIL
    Executes a program until an address (not including the address).
UP
    This is a synonym of the PREVIOUS command.
VALUE
    Evaluates an expression and displays it.
VARIABLE
    Enables variable display.
VCHANGE
    Logs commands (special purpose).
VERSION
    Displays the IDF Version.
VS
    Special command logging.
VSEP
    Enables or disables the blank line separating multiple variables.
WATCH
    sets a "watchpoint" condition that must be true before a particular
    breakpoint takes effect.
WHERE
    Displays the symbolic name for an address.
ZONED
    Selects the default VAR display format for Zoned Decimal variables.

*----------------------------------------------------------------------*
*                     ASMIDF EXTRACT Commands                          *
*----------------------------------------------------------------------*
EXTRACT ALET
    The ALET used to qualify the dataspace to be displayed in a Dump win
EXTRACT AREGS
    The Access Registers
EXTRACT ARGUMENT
    An address argument from the command line or cursor position.
EXTRACT ARRAY
    Returns information about array elements.
EXTRACT BREAK
    One or all breakpoints.
EXTRACT CALLERS
    Returns information for each generation in the program caller
    hierarchy.
EXTRACT CMDMSG
    Contents of the command line and message lines.
EXTRACT COLORS
    Color settings.
EXTRACT CURSOR
    Current position of the cursor.
EXTRACT DISASM
    Data about an instruction.
EXTRACT EVENT
    Data about the last event
EXTRACT EXITEXEC
    The name of the currently assigned exit routine.
EXTRACT GLOBAL
    Return the current setting of the ASMIDF global variable.
EXTRACT GLOBAL STEM
    Return the data of the Global Storage stems.
EXTRACT GLOBAL STEMS
    Return the names of all currently defined Global Storage stems.
EXTRACT GSTATUS
    Returns information about the storage used to contain the Global
    Storage data.
EXTRACT ICOUNT
    Number of instructions executed since the last ICOUNT command.
EXTRACT LANGUAGE ARGUMENTS
    Returns the current command arguments for each LSM information
    window.
EXTRACT LANGUAGE COMMANDS
    Returns the current command for each LSM information window
EXTRACT LANGUAGE OPTIONS
    Returns information about the current value of the various ASMIDF
    Language Support settings.
EXTRACT LANGUAGE STATUS
    Returns information about the extract files that have been loaded
EXTRACT LANGUAGE STEM
    Returns the name of the REXX stemmed variable array
EXTRACT LANGUAGE VERSION
    Returns the ASMIDF Language Support version
EXTRACT LASTMSG
    Returns the last ten messages issued by SET MSG
EXTRACT LOAD
    Obtain information about the target program
EXTRACT LOCATION
    Extracts bytes of main memory
EXTRACT LOCATION ALET
    Storage from a dataspace
EXTRACT MAP
    Returns information about the location of all modules and code
    sections known to ASMIDF.
EXTRACT MODULES
    Information about defined modules
EXTRACT MSTATUS
    Returns information about the storage used to contain extract data
    information.
EXTRACT NAMES
    Returns information about symbol names.
EXTRACT OPTIONS
    A list of all ASMIDF options and their current settings.
EXTRACT PFK
    Current PFK definitions.
EXTRACT PLIST
    Arguments at the time of ASMIDF invocation.
EXTRACT PLOCATES
    Returns information about the variables that may be located with
    Locator (pointer) variables.
EXTRACT QUALIFY
    Name of the currently qualified module
EXTRACT QUERY SETTING
    Returns the current value of an indicator or option item
EXTRACT REGS
    The GPRs, FPRs, and PSW
EXTRACT SCOPE
    Returns information about the statement scope block that corresponds
    to a memory address.
EXTRACT SCRVAR
    Returns the contents of an LSM information window
EXTRACT SELFNUCX
    Current value of the self-load offset
EXTRACT SKIPSTEP
    One or all currently skipped subroutines.
EXTRACT SOURCE
    Returns the source records that correspond to a memory address
EXTRACT STOREMAP
    Return Storage Allocation Map information.
EXTRACT STRUCTURE
    Returns information about structure and union components
EXTRACT SYMBOLS
    Information about symbols known to ASMIDF
EXTRACT TASKS
    Returns information about the currently executing tasks
EXTRACT TYPE
    Returns information about the type attributes for variables.
EXTRACT VALUE
    Value of an expression.
EXTRACT VARIABLE
    Returns information about variables
EXTRACT VDECLARE
    Returns attribute information about variables
EXTRACT VERSION
    ASMIDF Version message
EXTRACT VLOC
    Returns location information about variables
EXTRACT VVALUE
    Returns data value information about variables
EXTRACT WINDOWS
    Information about the screen and open windows

*----------------------------------------------------------------------*
*                          ASMIDF Options                              *
*----------------------------------------------------------------------*
AMODE24
    Forces the target program to run in AMODE-24.
AMODE31
    Forces the target program to run in AMODE-31.
AMODE64 (z/OS)
    Forces the target program to run in AMODE-64.
ASCII
    Displays a dump in ASCII.
AUTOLoad
    ASMIDF should/should not automatically try to load LSM extract files
    when Statement stepping.
AUTOSize
    ASMIDF should/should not resize window.
BCX
    Displays branches in extended mnemonics.
CKSubcm
    Insures ASMIDF's Subcom is valid before running macros.
CMDLog
    Logs user entered commands.
CMPExit
    Indicates Exit is written in compiled code.
COLors mhti
    msg/head/text/input
    Blue/Green/Pink/Red/Turquoise/Yellow/White
COMmand
    PLIST for target is actually a command to invoke.
EXItexec execname
    Specifies the name of the EXIT EXEC that should be used to determine
    breakpoint applicability.
FASTPath
    Uses fast version of PATH.
FULLQual
    Symbolic addresses should always be fully qualified.
HEXDisp
    Displays offset in hexadecimal.
HEXInput
    Numbers without explicit base are hexadecimal.
IMPMacro
    Permits implicit macros from command line.
INVPsw
    Accepts invalid PSWs on a SET PSW command.
LSMDebug
    Displays LSM debugging information.
LUname lu_unit (z/VSE and z/OS)
    Defines the VTAM logical unit name of the terminal used by IDF.
MACROLog
    Logs commands entered from macros.
NOAUTOLd
    Do not automatically try to load LSM extract files when Statement
    stepping.
NOAUTOSz
    Do not automatically resize windows.
NOBcx
    Do not display branches in extended mnemonics.
NODSects
    Do not load symbols in DSECTs.
NOIMPMac
    Disallows the implied execution of macros from the command line.
NOINVPsw
    Does not accept invalid PSWs on a SET PSW command.
NOProfil
    Do not run a profile macro.
NOSTOPNp
    Do not put internal breakpoints at a NOP(R) after a BAL(R).
NOSTOPSt
    Do not stop statement stepping when not in a statement.
NOSVC97 (z/OS)
    Do not use SVC 97 for events.
OFFSet
    Displays address in offset format.
OLDBREAK
    Uses the old operation of the Break command.
PASspgm
    Passes program interrupts to the target.
PATH
    Displays the number of times each instruction has executed.
PATHFile
    Writes the number of times each instruction has executed to a file.
PROfile name
    Runs REXX procedure 'name' as the profile.
QWDump
    Forces unformatted Dump display to begin on a fullword.
RISk
    Ignores as many "errors" as possible.
RLog
    Replays all previously logged user commands.
ROWstyle
    Uses row style for display of registers.
SBORDer
    Uses simple border characters.
SCDactiv
    Collapses ASMIDF Subcom before running target.
STOPNOP
    Places internal breakpoints at a NOP(R) after a BAL(R).
STOPStmt
    Stops statement stepping when not in a statement.
SVC97 (TSO)
    Uses SVC 97 for events.
SWAp
    Enables the capture of a target program's screen image.
TRACeall
    All instructions are traced in single stepped mode.
UNFtdump
    Displays Dump in unformatted mode.
